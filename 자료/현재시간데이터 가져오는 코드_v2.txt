# -*- coding: utf-8 -*-
"""
Created on Fri Sep 12 09:18:16 2025

@author: human
"""
import numpy as np 
import pandas as pd
import geopandas as gpd
import datetime, requests, os, pytz
from dotenv import load_dotenv
from shapely.geometry import Point

# IDW 보간 함수
def idw_interpolation(
        x, y, coords, values, power=2):
    distances = np.sqrt(
        (coords[:, 0] - x)**2 + (coords[:, 1] - y)**2)
    if np.any(distances == 0):
        return values[distances == 0][0]
    weights = 1 / distances**power
    return np.sum(weights * values) / np.sum(weights)

load_dotenv()
key = os.getenv("KMA_API_KEY")
key = "K66mUw9zTByuplMPczwchQ"

BASE_URL = "https://apihub.kma.go.kr/api/typ01/url"
SUB_URL = "kma_sfctm3.php"
SUB_LOCATION_URL = "stn_inf.php"
kst = pytz.timezone("Asia/Seoul")

st_dt = datetime.datetime.now(kst) - pd.to_timedelta(1, unit="hour")
st_dt = pd.Timestamp(st_dt).round("H")
st_dt = pd.to_datetime(st_dt).strftime("%Y%m%d%H%M")
ed_dt = pd.to_datetime(datetime.datetime.now())
ed_dt = pd.Timestamp(ed_dt).round("H").strftime("%Y%m%d%H%M")
url = f"{BASE_URL}/{SUB_URL}?tm1={st_dt}&tm2={ed_dt}&help=1&authKey={key}"

location_df = pd.read_csv(
    "C:/Users/human/Downloads/META_관측지점정보_20250912112452.csv", 
    encoding="cp949")
res = requests.get(url)
source = res.text.split("\n")

_source = list()
for line in source:
    _source.append(line.split())
hour_df=pd.DataFrame(_source[54:-2],columns=[i[2] for i in _source[4:50]])
hour_df=hour_df[["STN","TM","TA","PR","HM","WS","WD"]].copy()
hour_df["STN"] = hour_df["STN"].astype(int)
hour_df["TM"] = pd.to_datetime(hour_df["TM"]).dt.strftime("%Y-%m-%d %H:%M:%S")
hour_df["TA"] = hour_df["TA"].astype(float)
hour_df["PR"] = hour_df["PR"].astype(float)
hour_df["HM"] = hour_df["HM"].astype(float)
hour_df["WS"] = hour_df["WS"].astype(float)
hour_df["WD"] = hour_df["WD"].astype(int)
location_df = location_df.loc[:,["지점", "경도","위도"]]
location_df.columns = ["STN","LON","LAT"]
location_df["STN"] = location_df["STN"].astype(int)
location_df["LON"] = location_df["LON"].astype(float)
location_df["LAT"] = location_df["LAT"].astype(float)
merged_df = pd.merge(location_df, hour_df, on='STN')
merged_df = merged_df.dropna()

gdf = gpd.GeoDataFrame(merged_df, geometry=gpd.points_from_xy(merged_df['LON'], merged_df['LAT']), crs='EPSG:4326')
gdf_proj = gdf.to_crs(epsg=3857)

gdf["x"] = gdf_proj.geometry.x
gdf["y"] = gdf_proj.geometry.y

# 골프장 위치 데이터 
result = pd.DataFrame({"LON":[128.8784],"LAT":[37.7491]})
#result = db.execute(text("SELECT * FROM hiking_ai.view_park_with_trails;"))
golf_df = pd.DataFrame(result)

target_gdf = gpd.GeoDataFrame(
    golf_df, geometry=gpd.points_from_xy(
        golf_df['LON'], golf_df['LAT']), crs='EPSG:4326')
target_gdf_proj = target_gdf.to_crs(epsg=3857)

golf_df["x"] = target_gdf_proj.geometry.x
golf_df["y"] = target_gdf_proj.geometry.y
coords = gdf[["x", "y"]].values
for col in ["TA","PR","HM","WS"]:
    values = gdf[col].values
    interpolated_values = []
    for x, y in zip(golf_df["x"], golf_df["y"]):
        val = idw_interpolation(x, y, coords, values)
        interpolated_values.append(val)
    golf_df.loc[:,col] = interpolated_values

